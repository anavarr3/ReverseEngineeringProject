knitr::opts_chunk$set(echo = TRUE)
# Put code to reverse engineer sentence here
clean_dc |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(janitor)
library(readr)
library(refinr)
# Put code to reverse engineer sentence here
clean_dc |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
setwd("~/Documents/GitHub/ReverseEngineeringProject/ComicData")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(janitor)
library(readr)
library(refinr)
# Load required data
# Path to data should be loaded from folder "data" i.e. read_csv("data/name_of_data.csv")
dc_data <- read_csv("data/dc-wikia-data.csv")
marvel_data <- read_csv("data/marvel-wikia-data.csv")
# Clean required data and prepare for analysis if needed.
clean_dc <- clean_names(dc_data)
clean_marvel <- clean_names(marvel_data)
# Put code to reverse engineer sentence here
clean_dc |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
clean_marvel |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Display results of code below this codeblock
# Load required data
# Path to data should be loaded from folder "data" i.e. read_csv("data/name_of_data.csv")
dc_data <- read_csv("data/dc-wikia-data.csv")
marvel_data <- read_csv("data/marvel-wikia-data.csv")
# Clean required data and prepare for analysis if needed.
clean_dc <- clean_names(dc_data)
clean_marvel <- clean_names(marvel_data)
view(dc_data)
# Put code to reverse engineer sentence here
dc_gender <- clean_dc |>
filter(appearances >= 1, !is.na(sex)) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Put code to reverse engineer sentence here
dc_gender <- clean_dc |>
filter(appearances >= 1, !is.na(sex)) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
view(dc_gender)
# Put code to reverse engineer sentence here
dc_gender <- clean_dc |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
view(dc_gender)
# Put code to reverse engineer sentence here
dc_gender <- clean_dc |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
view(dc_gender)
# Put code to reverse engineer sentence here
dc_gender <- clean_dc |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
view(dc_gender)
marvel_gender <- clean_marvel |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Display results of code below this codeblock
marvel_gender <- clean_marvel |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Display results of code below this codeblock
view(marvel_gender)
# Put code to reverse engineer sentence here
womenincomics_dc <- read_csv(data/"dc_womenincomics2014_month.csv")
# Put code to reverse engineer sentence here
womenincomics_dc <- read_csv(~data/"dc_womenincomics2014_month.csv")
# Put code to reverse engineer sentence here
view(dc_womenincomics2014_month)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(janitor)
library(readr)
library(refinr)
# Load required data
# Path to data should be loaded from folder "data" i.e. read_csv("data/name_of_data.csv")
dc_data <- read_csv("data/dc-wikia-data.csv")
marvel_data <- read_csv("data/marvel-wikia-data.csv")
dc_womenincomics2014_comparedto2013 <- read_csv("data/DC 2014 Women In Comics Stats.csv")
marvel_womenincomics2014 <- read_csv("data/MARVEL 2014 Women In Comics Stats.csv")
dc_womenincomics2014_month <- read_csv("data/MONTH DC Women In Comics 2014.csv")
marvel_womenincomics2014_month <- read_csv("data/MONTH MARVEL Women In Comics 2014.csv")
# Clean required data and prepare for analysis if needed.
clean_dc <- clean_names(dc_data)
clean_marvel <- clean_names(marvel_data)
view(dc_data)
# Load required data
# Path to data should be loaded from folder "data" i.e. read_csv("data/name_of_data.csv")
dc_data <- read_csv("data/dc-wikia-data.csv")
marvel_data <- read_csv("data/marvel-wikia-data.csv")
dc_womenincomics2014_comparedto2013 <- read_csv("data/DC 2014 Women In Comics Stats.csv")
marvel_womenincomics2014_comparedto2013 <- read_csv("data/MARVEL 2014 Women In Comics Stats.csv")
dc_womenincomics2014_month <- read_csv("data/MONTH DC Women In Comics 2014.csv")
marvel_womenincomics2014_month <- read_csv("data/MONTH MARVEL Women In Comics 2014.csv")
# Clean required data and prepare for analysis if needed.
clean_dc <- clean_names(dc_data)
clean_marvel <- clean_names(marvel_data)
# Put code to reverse engineer sentence here
view(dc_womenincomics2014_month)
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
group_by(ID, sex) |>
summarise(count=n()) |>
arrange(desc(count))
view(dc_data)
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
group_by(ID) |>
summarise(count=n()) |>
arrange(desc(count))
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
group_by(sex, ID) |>
summarise(count=n()) |>
arrange(desc(count))
view(clean_dc)
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
group_by(sex, id) |>
summarise(count=n()) |>
arrange(desc(count))
dc_secret_identity
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
group_by(sex, id) |>
summarise(count=n()) |>
arrange(desc(count))
mutate(percentage = (count/sum(count)*100))
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
group_by(sex, id) |>
summarise(count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
dc_secret_identity
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
dc_secret_identity <- dc_gender |>
group_by(sex, id) |>
summarise(count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Put code to reverse engineer sentence here
dc_secret_identity <- dc_clean |>
group_by(sex, id) |>
summarise(count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex),
group_by(sex, id) |>
summarise(count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
dc_secret_identity
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex) |>
group_by(sex, id) |>
summarise(count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
dc_secret_identity
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count)) |>
# Display results of code below this codeblock
# Women and men were almost exactly equally likely to have a secret identity in the Marvel universe (49.4 percent of males and 49.5 percent of females), while in the DC universe 51 percent of males had a secret identity and 45 percent of females did.
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex)) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
# Display results of code below this codeblock
# Women and men were almost exactly equally likely to have a secret identity in the Marvel universe (49.4 percent of males and 49.5 percent of females), while in the DC universe 51 percent of males had a secret identity and 45 percent of females did.
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex)) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
dc_secret_identity
# Display results of code below this codeblock
# Women and men were almost exactly equally likely to have a secret identity in the Marvel universe (49.4 percent of males and 49.5 percent of females), while in the DC universe 51 percent of males had a secret identity and 45 percent of females did.
clean_dc |>
filter(is.na(id))
clean_dc
clean_dc |>
filter(!is.na(id))
clean_dc
no_id <- clean_dc |>
filter(is.na(id))
no_id
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex, id)) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
dc_secret_identity
# Display results of code below this codeblock
# while in the DC universe 51 percent of males had a secret identity and 45 percent of females did.
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity <- clean_marvel |>
filter(!is.na(sex),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity
# Display results of code below this codeblock
#view(dc_secret_identity)
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(id)) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity <- clean_marvel |>
filter(!is.na(sex),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity
# Display results of code below this codeblock
#view(dc_secret_identity)
#view(marvel_secret_identity)
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity <- clean_marvel |>
filter(!is.na(id)) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity
# Display results of code below this codeblock
#view(dc_secret_identity)
view(marvel_secret_identity)
# Put code to reverse engineer sentence here
dc_gender <- clean_dc |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Put code to reverse engineer sentence here
dc_gender <- clean_dc |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
dc_gender
marvel_gender <- clean_marvel |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
# Display results of code below this codeblock
view(dc_gender)
view(marvel_gender)
# Put code to reverse engineer sentence here
dc_secret_identity <- clean_dc |>
filter(!is.na(sex),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity <- clean_marvel |>
filter(!is.na(id),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
marvel_secret_identity
# Display results of code below this codeblock
#view(dc_secret_identity)
view(marvel_secret_identity)
md <- get_acs(geography = "county",
variables = c(medianage = "B01002_001"),
state = "MD",
year = 2021)
md_arrange <- md |>
arrange((estimate)) |>
top_n(20, estimate)
md <- get_acs(geography = "county",
variables = c(medianage = "B01002_001"),
state = "MD",
year = 2021)
md_arrange <- md |>
arrange((estimate)) |>
top_n(20, estimate)
md_arrange
md <- get_acs(geography = "county",
variables = c(medianage = "B01002_001"),
state = "MD",
year = 2021)
md_arrange <- md |>
arrange((estimate))
md_arrange
md |>
filter(str_detect(concept, "living arrangements of adults")) |>
filter(!str_detect(concept, "citizenship"))
view(ACS5)
mdzip <- get_acs(geography="zcta", variables = "B16003_008", state="MD", year=2021)
mdzip <- get_acs(geography="zcta", variables = "B16003_008", state="MD", year=2019)
mdzip
mdzip <- get_acs(geography="zcta", variables = "B16003_008", state="MD", year="2021")
mdzip <- get_acs(geography="zcta", variables = "B16003_008", state="MD", year="2019")
mdzip <- get_acs(geography="zcta", variables = "B16003_008", state="MD", year=2019)
mdzip
mdzip <- get_acs(geography="zcta", variables = "B16003_008", year=2021)
mdzip
md |>
filter(str_detect(concept, "living arrangements of adults")) |>
filter(!str_detect(concept, "citizenship"))
mont2022 <- montgomery2022 |>
group_by(zip) |>
summarise(count = n()) |>
arrange(desc(count)) |>
mutate(zip = as.character(zip))
mont2022
mont_merge <- montgomery2022 |>
left_join(mdzip, by=c('zip'='GEOID')) |>
rename(population = estimate)
mont_merge
mont_merge <- montgomery2022 |>
inner_join(mont2022)
mont_merge <- montgomery2022 |>
inner_join(mont2022)
mont_merge
1mont_merge <- montgomery2022 |>
montmerge <- montgomery2022 |>
inner_join(mont2022)
montmerge
