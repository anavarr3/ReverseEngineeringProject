View(pg_county_distinct)
pg_county_distinct <- distinct(cleaned_maryland_payments, vendor_name)
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE", "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY"))
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE" || "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY"))
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE" | "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY"))
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE"))
View(pg_schools)
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") ||
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY"))
View(pg_schools)
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY"))
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY")
pg_schools <- cleaned_maryland_payments |>
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY") |
str_detect(vendor_name, "PRINCE GEORGE'S COMM COLLG"))
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY") |
str_detect(vendor_name, "PRINCE GEORGE'S COMM COLLG") |
str_detect(vendor_name, "PRINCE GEORGE'S COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COMMMUNITY COLLEGE FOUNDATION, INC") |
str_detect(vendor_name, "PRINCE GEORGES COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOLS") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES PUBLIC SCHOOLS"))
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY") |
str_detect(vendor_name, "PRINCE GEORGE'S COMM COLLG") |
str_detect(vendor_name, "PRINCE GEORGE'S COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COMMMUNITY COLLEGE FOUNDATION, INC") |
str_detect(vendor_name, "PRINCE GEORGES COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOLS") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES PUBLIC SCHOOLS")) |>
summarise(
count_amount = n(),
total_amount = sum(amount))
View(pg_county_distinct)
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY") |
str_detect(vendor_name, "PRINCE GEORGE'S COMM COLLG") |
str_detect(vendor_name, "PRINCE GEORGE'S COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COMMMUNITY COLLEGE FOUNDATION, INC") |
str_detect(vendor_name, "PRINCE GEORGES COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOLS") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES PUBLIC SCHOOLS")) |>
summarise(
total_amount = sum(amount))
pg_schools <- cleaned_maryland_payments |>
filter(str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE") |
str_detect(vendor_name, "BOARD OF EDUCATION OF PRINCE GEORGE'S COUNTY") |
str_detect(vendor_name, "PRINCE GEORGE'S COMM COLLG") |
str_detect(vendor_name, "PRINCE GEORGE'S COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COMMMUNITY COLLEGE FOUNDATION, INC") |
str_detect(vendor_name, "PRINCE GEORGES COMMUNITY COLLEGE") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY PUBLIC SCHOOLS") |
str_detect(vendor_name, "PRINCE GEORGES COUNTY SCHOOL") |
str_detect(vendor_name, "PRINCE GEORGES PUBLIC SCHOOLS"))
pg_county_distinct_agency <- distinct(cleaned_maryland_payments, agency_name)
View(pg_county_distinct_agency)
pg_school_total <- pg_schools |>
summarise(
total = sum(amount)
)
View(pg_school_total)
pg_schools |>
group_by(fiscal_year)
pg_schools |>
group_by(fiscal_year) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
View(pg_schools)
fiscal_year_pg_schools <- pg_schools |>
group_by(fiscal_year) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
View(fiscal_year_pg_schools)
fiscal_year_pg_schools <- pg_schools |>
group_by(fiscal_year) |>
summarise(
total = sum(amount)
) |>
arrange(desc(fiscal_year))
View(maryland_payments)
View(cleaned_maryland_payments)
capital_projects_UMD <- cleaned_maryland_payments |>
filter(str_detect(agnecy_name, "CAPITAL PROJECTS- UNIVERSITY OF MARYLAND"))
capital_projects_UMD <- cleaned_maryland_payments |>
filter(str_detect(agency_name, "CAPITAL PROJECTS- UNIVERSITY OF MARYLAND"))
View(capital_projects_UMD)
capital_projects_UMD_vendors <- capital_projects_UMD |>
group_by(vendor_name) |>
summarise(
total = sum(amount)
)
View(capital_projects_UMD_vendors)
View(cleaned_maryland_grants_and_loans)
stem_cell_research <- cleaned_maryland_grants_and_loans |>
group_by(description) |>
str_detect(description, "STEM CELL RESEARCH GRANT")
stem_cell_research <- cleaned_maryland_grants_and_loans |>
group_by(description) |>
filter(str_detect(description, "STEM CELL RESEARCH GRANT"))
View(stem_cell_research)
stem_cell_research <- cleaned_maryland_grants_and_loans |>
group_by(description) |>
filter(str_detect(description, "STEM CELL RESEARCH GRANT"))
stem_cell_research <- cleaned_maryland_grants_and_loans |>
filter(str_detect(description, "STEM CELL RESEARCH GRANT"))
stem_cell_research <- cleaned_maryland_grants_and_loans |>
group_by(description, fiscal_year) |>
filter(str_detect(description, "STEM CELL RESEARCH GRANT")) |>
summarise(
total = sum(amount)
)
stem_cell_research_1 <- cleaned_maryland_grants_and_loans |>
filter(str_detect(description, "STEM CELL RESEARCH GRANT"))
stem_cell_research_2 <- stem_cell_research_1 |>
group_by(description, fiscal_year) |>
summarise(
total = sum(amount)
)
stem_cell_research_totalcheck <- stem_cell_research_1 |>
group_by(fiscal_year) |>
summarise(
total = sum(amount)
)
View(stem_cell_research_totalcheck)
stem_cell_research <- cleaned_maryland_grants_and_loans |>
group_by(fiscal_year) |>
filter(str_detect(description, "STEM CELL RESEARCH GRANT")) |>
summarise(
total = sum(amount)
)
View(stem_cell_research_totalcheck)
View(maryland_grants_and_loans)
View(cleaned_maryland_grants_and_loans)
cleaned_maryland_grants_and_loans |>
group_by(zip_code, grantee)
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(zip_code, grantee)
View(zip_code_umd_grantees)
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(zip_code, grantee) |>
filter(str_detect(zip_code, "20742"))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(zip_code, grantee) |>
filter(str_detect(zip_code, "20742"))
summarise(
total = sum(amount)
)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(zip_code, grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(zip_code, grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(zip_code, grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
distinct() |>
mutate(umd_college_park = str_sub(zip_code, start=1L, end=5L)) |>
mutate(umd_college_park = case_when(
umd_college_park == "UNIVERSITY OF MARYLAND" ~ UMD,
umd_college_park == "UNIVERSITY OF MARYLAND COLLEGE PARK" ~ UMD,
umd_college_park == "UNIVERSITY OF MD,COLLEGE PARK " ~ UMD,
.default = zip5
)) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
distinct() |>
mutate(umd_college_park = case_when(
umd_college_park == "UNIVERSITY OF MARYLAND" ~ UMD,
umd_college_park == "UNIVERSITY OF MARYLAND COLLEGE PARK" ~ UMD,
umd_college_park == "UNIVERSITY OF MD,COLLEGE PARK " ~ UMD,
.default = zip5
)) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
distinct() |>
mutate(umd_college_park = case_when(
umd_college_park == "UNIVERSITY OF MARYLAND" ~ UMD,
umd_college_park == "UNIVERSITY OF MARYLAND COLLEGE PARK" ~ UMD,
umd_college_park == "UNIVERSITY OF MD,COLLEGE PARK " ~ UMD,
.default = UMD
)) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
distinct() |>
mutate(umd_college_park = case_when(
grantee == "UNIVERSITY OF MARYLAND" ~ UMD,
grantee == "UNIVERSITY OF MARYLAND COLLEGE PARK" ~ UMD,
grantee == "UNIVERSITY OF MD,COLLEGE PARK " ~ UMD,
.default = UMD
)) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
distinct() |>
mutate(umd_college_park = case_when(
grantee == "UNIVERSITY OF MARYLAND" ~ UMD,
grantee == "UNIVERSITY OF MARYLAND COLLEGE PARK" ~ UMD,
grantee == "UNIVERSITY OF MD,COLLEGE PARK " ~ UMD,
.default = UMD
)) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
mutate(umd_college_park = case_when(
grantee == "UNIVERSITY OF MARYLAND" ~ UMD,
grantee == "UNIVERSITY OF MARYLAND COLLEGE PARK" ~ UMD,
grantee == "UNIVERSITY OF MD,COLLEGE PARK " ~ UMD,
.default = UMD
)) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
View(capital_projects_UMD)
View(capital_projects_UMD_vendors)
#20742
zip_code_umd_grantees <- cleaned_maryland_grants_and_loans |>
group_by(grantee) |>
filter(str_detect(zip_code, "20742")) |>
summarise(
total = sum(amount)
) |>
arrange(desc(total))
stem_cell_research <- cleaned_maryland_grants_and_loans |>
group_by(fiscal_year) |>
filter(str_detect(description, "STEM CELL RESEARCH GRANT")) |>
summarise(
total = sum(amount)
)
capital_projects_UMD <- cleaned_maryland_payments |>
filter(str_detect(agency_name, "CAPITAL PROJECTS- UNIVERSITY OF MARYLAND"))
capital_projects_UMD_vendors <- capital_projects_UMD |>
group_by(vendor_name) |>
summarise(
total = sum(amount)
)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=10)
problems(payments)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=373564)
glimpse(payments)
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(`Fiscal Year`)
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv")
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(`Fiscal Year`)
knitr::opts_chunk$set(echo = TRUE)
install.packages('refinr')
# turn off sci notation
options(scipen=999)
library(tidyverse)
library(lubridate)
library(refinr)
# Load data
md_grant_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv")
# Display it
md_grant_loans
# Now let's try and group and count the number of expenditures by recipient. To make it a bit more manageable, let's use another string function from `stringr` and filter for recipients that start with the uppercase "W" or lowercase "w" using the function `str_detect()` with a regular expression.
# The filter function in the codeblock below says: look in the Grantee column, and pluck out any value that starts with (the "^" symbol means "starts with") a lowercase "w" OR (the vertical "|", called a pipe, means OR) an uppercase "W".
md_grant_loans |>
group_by(Grantee) |>
summarise(
count=n()
) |>
filter(str_detect(Grantee, '^w|^W')) |>
arrange(Grantee)
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=key_collision_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
cleaned_md_grant_loans
cleaned_md_grant_loans |>
group_by(Grantee, grantee_clean) |>
summarise(
count=n()
) |>
filter(str_detect(Grantee, '^w|^W')) |>
arrange(Grantee)
View(cleaned_md_grant_loans)
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
# load your packages
# Load the Maryland expenditures data table
maryland_expenses <- read_csv("data/Smaryland_expenses.csv")
# Turn off scientific notation
options(scipen=999)
# load your packages
install.packages('refinr')
# Turn off scientific notation
options(scipen=999)
# load your packages
install.packages('refinr')
library(tidyverse)
library(lubridate)
library(refinr)
# Load the Maryland expenditures data table
maryland_expenses <- read_csv("data/Smaryland_expenses.csv")
# Load the Maryland expenditures data table
maryland_expenses <- read_csv("data/maryland_expenses.csv")
View(maryland_expenses)
glimpse(maryland_expenses)
clean_maryland_expenses <- maryland_expenses |>
clean_names() |>
mutate(expenditure_date=mdy(expenditure_date))
library(readr)
clean_maryland_expenses <- maryland_expenses |>
clean_names() |>
mutate(expenditure_date=mdy(expenditure_date))
library(janitor)
clean_maryland_expenses <- maryland_expenses |>
clean_names() |>
mutate(expenditure_date=mdy(expenditure_date))
clean_maryland_expenses <- maryland_expenses |>
clean_names()
View(clean_maryland_expenses)
glimpse(clean_maryland_expenses)
head(clean_maryland_expenses)
clean_maryland_expenses <- maryland_expenses |>
clean_names() |>
mutate(expenditure_date=mdy(expenditure_date))
install.packages('lubridate')
install.packages("lubridate")
clean_maryland_expenses <- maryland_expenses |>
clean_names() |>
mutate(expenditure_date=mdy(expenditure_date))
head(clean_maryland_expenses)
library(lubridate)
clean_maryland_expenses <- maryland_expenses |>
clean_names() |>
mutate(expenditure_date=mdy(expenditure_date))
head(clean_maryland_expenses)
View(clean_maryland_expenses)
View(maryland_expenses)
media_expenses <- clean_maryland_expenses |>
filter(!is.na(payee_name)) |>
filter(payee_name!="NA")
head(media_expenses)
View(media_expenses)
View(media_expenses)
write_csv("data/media_expenses.csv")
write_csv(media_expenses,"data/media_expenses.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(janitor)
library(readr)
library(refinr)
dc_data <- read_rds("data/dc-wikia-data.csv")
dc_data <- read_csv("data/dc-wikia-data.csv")
marvel_data <- read_csv("data/marvel-wikia-data.csv")
View(marvel_data)
clean_dc <- clean_names(dc_data)
clean_marvel <- clean_names(marvel_data)
View(clean_dc)
View(clean_marvel)
clean_dc |>
#group_by(sex) |>
filter(sex == "Female Characters" | appearances >= 1) |>
summarise(
count=n())
clean_dc |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n())
clean_dc |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count))
clean_marvel |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count))
clean_marvel |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum)count*100))
clean_marvel |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
clean_dc |>
filter(appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
setwd("~/Documents/GitHub/ReverseEngineeringProject/ComicData")
